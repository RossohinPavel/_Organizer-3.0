from ...source import *
from tkinter import Listbox


class AliasInterface:
    """–ö–ª–∞—Å—Å –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –≤–∏–¥–∂–µ—Ç–æ–≤ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Å–µ–≤–¥–æ–Ω–∏–º–∞–º–∏"""

    __slots__ = ('listbox', )

    def __init__(self, master: ttk.Frame) -> None:
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ª–µ–π–±–ª–∞ –∏ –∫–Ω–æ–ø–æ–∫
        container = ttk.Frame(master)
        container.pack(anchor=ttkc.NW, pady=(0, 3), fill=ttkc.X)

        # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –õ–µ–π–±–ª–∞ –∏ –∫–Ω–æ–ø–æ–ø–∫
        ttk.Label(container, text="–ü—Å–µ–≤–¥–æ–Ω–∏–º—ã").pack(side=ttkc.LEFT)

        del_btn = ttk.Button(
            container,
            text='üóë', 
            style='Libdelete.danger.Outline.TButton',
            command=self.delete_command
        )
        del_btn.pack(side=ttkc.RIGHT, padx=(3, 0))

        add_btn = ttk.Button(
            container,
            text='+',
            style='Lib+.success.Outline.TButton',
            command=self.add_command
        )
        add_btn.pack(side=ttkc.RIGHT)

        #–õ–∏—Å—Ç–±–æ–∫—Å
        self.listbox = Listbox(master)
        self.listbox.pack(side=ttkc.LEFT, fill=ttkc.BOTH, expand=1)

        # –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –ª–∏—Å—Ç–±–æ–∫—Å–∞
        sb = ttk.Scrollbar(
            master, 
            style='round',
            orient='vertical', 
            command=self.listbox.yview
        )
        sb.pack(side=ttkc.LEFT, fill=ttkc.Y)
        
        self.listbox.configure(yscrollcommand=sb.set)

    def add_command(self) -> None:
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ Listbox –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–æ–Ω–æ–ø–∫–∏."""
        pos = self.listbox.winfo_rootx() + 75, self.listbox.winfo_rooty() - 40

        # –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ try, —á—Ç–æ–±—ã –Ω–µ –∫–∏–¥–∞–ª–æ –æ—à–∏–±–∫—É –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–æ–º –¥–æ—á–µ—Ä–Ω–µ–º –æ–∫–Ω–µ.
        try:
            res = Querybox.get_string(
                prompt='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Å–µ–≤–¥–æ–Ω–∏–º–∞',
                title='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Å–µ–≤–¥–æ–Ω–∏–º–∞',
                parent=self.listbox,
                position=pos
            )
            if self.listbox.winfo_viewable() and res:
                self.insert(res)
        except: pass

    def delete_command(self) -> None:
        """–£–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É"""
        try: self.listbox.delete(self.listbox.curselection())
        except: pass
    
    def get(self) -> tuple[str]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Å–µ–≤–¥–æ–Ω–∏–º–æ–≤"""
        return self.listbox.get(0, ttkc.END)
    
    def insert(self, *args) -> None:
        """–í—Å—Ç–∞–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≤ Listbox —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã"""
        elements = self.listbox.get(0, ttkc.END)
        for value in args:
            if value not in elements:
                self.listbox.insert(ttkc.END, value)
